<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:PhasmophobiaSaveEditor.Converters"
                    xmlns:fluent="clr-namespace:PhasmophobiaSaveEditor.Controls.Fluent">

    <RadialGradientBrush x:Key="FluentRadialGradient">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0.2" Color="#59FFFFFF" />
            <GradientStop Offset="0.9" Color="Transparent" />
            <GradientStop Offset="1" Color="Transparent" />
            <GradientStop Offset="1.1" Color="Transparent" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="FluentBorderGradient" RadiusX=".33" RadiusY="1.5">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".4" Color="#7FFFFFFF" />
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="FluentRadialPressedGradient" Center=".5 .5" GradientOrigin=".5 .5" RadiusX=".3" RadiusY=".3">
        <GradientStop Offset="1" Color="Transparent" />
        <GradientStop Offset=".75" Color="Transparent" />
        <GradientStop Offset=".55" Color="#35FFFFFF" />
        <GradientStop Offset="0.4" Color="#35FFFFFF" />
        <GradientStop Offset="0.2" Color="Transparent" />
    </RadialGradientBrush>

    <Style x:Key="FluentControlStyle" TargetType="{x:Type fluent:FluentControl}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderGradient" Value="{StaticResource FluentBorderGradient}" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={converters:ThicknessToOrientedThicknessConverter}, ConverterParameter=TopBottom}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsSmartClipped" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="RippleBrush" Value="{StaticResource FluentRadialGradient}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fluent:FluentControl}">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseIn" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.050" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.080" Value=".3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseIn">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.220" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="RenderTransform.ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                           Storyboard.TargetName="PART_FeedbackElement"
                                                                           Storyboard.TargetProperty="RenderTransform.ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.150" Value="2">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.450" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.650" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut" />
                                    <VisualTransition From="MousePressed" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_FeedbackElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="BorderBrush.Opacity"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_FeedbackElement"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="PART_FeedbackElement"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_FeedbackElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.050" />

                                        <!--  See upper comment  -->
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="BorderBrush.Opacity"
                                                         To="0"
                                                         Duration="0:0:0.050" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseIn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_FeedbackElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                            <!--  this is the feedback element used in code  -->
                            <Ellipse x:Name="PART_FeedbackElement"
                                     Canvas.Left="{TemplateBinding RippleX}"
                                     Canvas.Top="{TemplateBinding RippleY}"
                                     Width="{TemplateBinding RippleSize}"
                                     Height="{TemplateBinding RippleSize}"
                                     Fill="{TemplateBinding RippleBrush}"
                                     Opacity="0"
                                     RenderTransformOrigin=".5 .5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform x:Name="PART_ScaleTransform" ScaleX="1" ScaleY="1" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <fluent:InnerGlow x:Name="innerGlow"
                                          Opacity="0"
                                          Visibility="Collapsed" />
                        <Border x:Name="rootBorder"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderGradient}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            Focusable="False"
                                            IsTabStop="False"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_FeedbackElement" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(fluent:FluentAssist.PressedBrush)}" />
                        </Trigger>
                        <Trigger Property="EffectMode" Value="Glow">
                            <Setter TargetName="PART_FeedbackElement" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="innerGlow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsRippleEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="InnerGlowStory">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames FillBehavior="HoldEnd"
                                                                       Storyboard.TargetName="innerGlow"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.060" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="InnerGlowStory" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="fluent:FluentAssist.PressedBrush" Value="{StaticResource FluentRadialPressedGradient}" />
    </Style>
    <Style BasedOn="{StaticResource FluentControlStyle}" TargetType="{x:Type fluent:FluentControl}" />

</ResourceDictionary>