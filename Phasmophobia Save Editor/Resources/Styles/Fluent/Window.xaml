<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PhasmophobiaSaveEditor.Controls"
                    xmlns:converters="clr-namespace:PhasmophobiaSaveEditor.Converters"
                    xmlns:dialog="clr-namespace:PhasmophobiaSaveEditor.Controls.Dialog"
                    xmlns:fluent="clr-namespace:PhasmophobiaSaveEditor.Controls.Fluent"
                    xmlns:markupExtensions="clr-namespace:PhasmophobiaSaveEditor.MarkupExtensions"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="clr-namespace:PhasmophobiaSaveEditor.Themes">

    <DataTemplate DataType="{x:Type system:String}">
        <TextBlock Text="{Binding Path=.}" TextWrapping="Wrap" />
    </DataTemplate>

    <markupExtensions:DynamicResourceProxy x:Key="AlternativeBrushProxy" ProxyValue="{Binding Source={x:Static themes:FluentPalette.Palette}, Path=AlternativeColor, Converter={converters:ColorToBrushConverter}}" />

    <ControlTemplate x:Key="FluentWindowTemplate" TargetType="{x:Type controls:FluentWindow}">
        <Border x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius}">
            <AdornerDecorator>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  Header  -->
                    <Border Grid.Row="0"
                            Height="30"
                            Background="{themes:FluentResource AlternativeBrush}"
                            ClipToBounds="True"
                            CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                           Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                           ConverterParameter=tleft tright}"
                            Visibility="{TemplateBinding HideHeader,
                                                         Converter={converters:BooleanToVisibilityConverter},
                                                         ConverterParameter=True}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Icon  -->
                            <Image Grid.Column="0"
                                   Margin="5"
                                   VerticalAlignment="Center"
                                   Source="{TemplateBinding Icon}"
                                   Visibility="{TemplateBinding ShowIcon,
                                                                Converter={converters:BooleanToVisibilityConverter}}" />

                            <!--  Title  -->
                            <TextBlock Grid.Column="1"
                                       Margin="5,0"
                                       VerticalAlignment="Center"
                                       Foreground="{themes:FluentResource MarkerBrush}"
                                       Text="{TemplateBinding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />

                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  ContentSource="AdditionalContent"
                                                  WindowChrome.IsHitTestVisibleInChrome="True" />
                                <Separator Margin="5" Style="{DynamicResource VerticalSeparatorStyle}" />
                            </StackPanel>

                            <!--  System Buttons  -->
                            <StackPanel Grid.Column="3" Orientation="Horizontal">
                                <Button x:Name="MinimizeButton"
                                        Command="{Binding MinimizeCommand,
                                                          RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                        Style="{DynamicResource WindowButtonStyle}">
                                    <Path Width="10"
                                          Height="10"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Stretch="Uniform"
                                          Stroke="{Binding Foreground,
                                                           RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                          AncestorType=Button}}"
                                          StrokeThickness="1">
                                        <Path.Data>
                                            <LineGeometry StartPoint="2, 11.5" EndPoint="12, 11.5" />
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button x:Name="MaximizeButton"
                                        Command="{Binding MaximizeCommand,
                                                          RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                        Style="{DynamicResource WindowButtonStyle}">
                                    <Path Width="10"
                                          Height="10"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RenderOptions.EdgeMode="Aliased"
                                          Stretch="Uniform"
                                          Stroke="{Binding Foreground,
                                                           RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                          AncestorType=Button}}"
                                          StrokeThickness="1">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="2, 2, 12, 12" />
                                                <LineGeometry StartPoint="2.5, 3" EndPoint="13.5, 3" />
                                                <LineGeometry StartPoint="2.5, 4" EndPoint="13.5, 4" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button x:Name="RestoreButton"
                                        Command="{Binding RestoreCommand,
                                                          RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                        Style="{DynamicResource WindowButtonStyle}">
                                    <Path Width="10"
                                          Height="10"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Stretch="Uniform"
                                          Stroke="{Binding Foreground,
                                                           RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                          AncestorType=Button}}"
                                          StrokeThickness="1">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0.5, 4.5, 11, 11" />
                                                <LineGeometry StartPoint="1, 5.5" EndPoint="11, 5.5" />
                                                <LineGeometry StartPoint="4, 0.5" EndPoint="16, 0.5" />
                                                <LineGeometry StartPoint="15, 0" EndPoint="15.5, 12" />
                                                <LineGeometry StartPoint="1, 6.5" EndPoint="11, 6.5" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                <Button x:Name="CloseButton"
                                        fluent:FluentAssist.CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                                                           Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                                                           ConverterParameter=tright}"
                                        Command="{Binding CloseCommand,
                                                          RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                        Style="{DynamicResource WindowCloseButtonStyle}">
                                    <Path Width="10"
                                          Height="10"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Stretch="Uniform"
                                          Stroke="{Binding Foreground,
                                                           RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                          AncestorType=Button}}"
                                          StrokeThickness="1">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <LineGeometry StartPoint="3.76, 12.24" EndPoint="12.24, 3.76" />
                                                <LineGeometry StartPoint="3.76, 3.76" EndPoint="12.24, 12.24" />
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <!--  Content  -->
                    <Border Grid.Row="1" CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius, Converter={converters:CornerRadiusToOrientedCornerRadiusConverter}, ConverterParameter=bleftbright}">
                        <Border.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border x:Name="ContentMask"
                                            Width="{TemplateBinding ActualWidth}"
                                            Height="{TemplateBinding ActualHeight}"
                                            Background="White"
                                            BorderThickness="0"
                                            CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                                           Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                                           ConverterParameter=bleftbright}" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.OpacityMask>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </Grid>
            </AdornerDecorator>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="HideHeader" Value="False">
                <Setter TargetName="ContentMask" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(fluent:FluentAssist.CornerRadius), Converter={converters:CornerRadiusToOrientedCornerRadiusConverter}, ConverterParameter=bleft bright}" />
            </Trigger>-->
            <!--<Trigger Property="IsActive" Value="False">
                <Setter Property="Background" Value="{themes:FluentResource AlternativeBrush}" />
            </Trigger>-->

            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="fluent:FluentAssist.CornerRadius" Value="0" />
                <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="MaximizeButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="RestoreButton" Property="IsEnabled" Value="False" />
            </Trigger>

            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FluentWindowStyle" TargetType="{x:Type controls:FluentWindow}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="FluentBackground" Value="{themes:FluentResource AlternativeBrush}" />
        <Setter Property="FontFamily" Value="{themes:FluentResource FontFamily}" />
        <Setter Property="FontSize" Value="{themes:FluentResource FontSize}" />
        <Setter Property="Foreground" Value="{themes:FluentResource MarkerBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="MinWidth" Value="110" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource FluentWindowTemplate}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="fluent:FluentAssist.CornerRadius" Value="{themes:FluentResource CornerRadius}" />
    </Style>
    <Style BasedOn="{StaticResource FluentWindowStyle}" TargetType="{x:Type controls:FluentWindow}" />

    <Style x:Key="{x:Type controls:ExceptionWindow}"
           BasedOn="{StaticResource {x:Type controls:FluentWindow}}"
           TargetType="{x:Type controls:ExceptionWindow}">
        <Setter Property="MaxWidth" Value="650" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExceptionWindow}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0"
                                    Background="{themes:FluentResource PrimaryBrush}"
                                    CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                                   Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                                   ConverterParameter=tlefttright}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Title  -->
                                    <TextBlock Grid.Column="0"
                                               Margin="5,0"
                                               VerticalAlignment="Center"
                                               FontSize="{DynamicResource FontSizeRegular}"
                                               Foreground="{DynamicResource MarkerBrush}"
                                               Text="{TemplateBinding Title}"
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="NoWrap" />

                                    <Button Grid.Column="1"
                                            fluent:FluentAssist.CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                                                               Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                                                               ConverterParameter=tright}"
                                            Command="{Binding CloseCommand,
                                                              RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                            Style="{DynamicResource WindowCloseButtonStyle}">
                                        <Path Width="10"
                                              Height="10"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Stretch="Uniform"
                                              Stroke="{Binding Foreground,
                                                               RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                              AncestorType=Button}}"
                                              StrokeThickness="1">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="3.76, 12.24" EndPoint="12.24, 3.76" />
                                                    <LineGeometry StartPoint="3.76, 3.76" EndPoint="12.24, 12.24" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Button>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="1" Margin="0,10,10,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="64" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0"
                                       Height="40"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Top"
                                       Source="{DynamicResource ErrorIconDrawingImage}"
                                       Stretch="Uniform" />

                                <StackPanel Grid.Column="1" Orientation="Vertical">
                                    <TextBlock Text="{DynamicResource UnhandledException.Message}" TextWrapping="Wrap" />

                                    <TextBlock Margin="0,10,0,0"
                                               Text="{Binding Exception.Message,
                                                              RelativeSource={RelativeSource Mode=TemplatedParent},
                                                              Mode=OneWay}"
                                               TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>

                            <StackPanel Grid.Row="2"
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal">

                                <Button Width="120"
                                        Margin="4"
                                        Command="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                          Path=ContinueCommand}"
                                        Content="{DynamicResource UnhandledException.Continue}" />

                                <Button Width="120"
                                        Margin="4"
                                        Command="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                          Path=QuitCommand}"
                                        Content="{DynamicResource UnhandledException.Quit}"
                                        IsDefault="True" />

                            </StackPanel>

                            <ToggleButton x:Name="DetailsToggleButton"
                                          Grid.Row="2"
                                          Width="120"
                                          Margin="4"
                                          HorizontalAlignment="Left"
                                          Content="{DynamicResource UnhandledException.Details}"
                                          Style="{DynamicResource DetailsToggleButton}" />

                            <ScrollViewer Grid.Row="3"
                                          MaxHeight="200"
                                          Margin="4"
                                          Padding="10"
                                          HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Auto"
                                          Visibility="{Binding ElementName=DetailsToggleButton,
                                                               Path=IsChecked,
                                                               Converter={converters:BooleanToVisibilityConverter}}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock FontSize="18" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception, Converter={converters:GetTypeConverter}}" />
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="Message"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.Message,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.Message}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="Stack Trace"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.StackTrace,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.StackTrace}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="Data"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.Data,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.Data}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Label>
                                                        <TextBlock FontStyle="Italic" FontWeight="Normal">
                                                            <Run Text="{Binding Key, Mode=OneWay}" />
                                                            =<Run Text="{Binding Value, Mode=OneWay}" />
                                                        </TextBlock>
                                                    </Label>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="Target Site"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.TargetSite,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.TargetSite}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="Source"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.Source,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.Source}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="HelpLink"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.HelpLink,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.HelpLink}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Margin="0,5"
                                                            FontWeight="Bold"
                                                            Header="HResult"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                                 Path=Exception.HResult,
                                                                                 Converter={converters:NullToVisibilityConverter}}">
                                        <TextBlock FontWeight="Normal" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Exception.HResult}" />
                                    </HeaderedContentControl>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Title" Value="Unhandled exception" />
    </Style>

    <Style TargetType="{x:Type dialog:MessageDialogInternal}">
        <!--<Setter Property="AllowsTransparency" Value="True" />-->
        <Setter Property="FluentBackground" Value="{themes:FluentResource AlternativeBrush}" />
        <Setter Property="FontFamily" Value="{themes:FluentResource FontFamily}" />
        <Setter Property="FontSize" Value="{themes:FluentResource FontSize}" />
        <Setter Property="Foreground" Value="{themes:FluentResource MarkerBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="MaxHeight" Value="500" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="MinWidth" Value="110" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dialog:MessageDialogInternal}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Header  -->
                            <Border Grid.Row="0"
                                    Background="{DynamicResource PrimaryBrush}"
                                    BorderBrush="{DynamicResource AccentBrush}"
                                    BorderThickness="0,0,0,2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  Icon  -->
                                    <Image Grid.Column="0"
                                           Margin="5"
                                           VerticalAlignment="Center"
                                           Source="{TemplateBinding Icon}"
                                           Visibility="{TemplateBinding ShowIcon,
                                                                        Converter={converters:BooleanToVisibilityConverter}}" />

                                    <!--  Title  -->
                                    <ContentPresenter Grid.Column="1"
                                                      Margin="5,0"
                                                      VerticalAlignment="Center"
                                                      Content="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                        Path=Parameters.Header}"
                                                      TextElement.Foreground="{DynamicResource MarkerBrush}" />

                                    <!--  System Buttons  -->
                                    <Button x:Name="CloseButton"
                                            Grid.Column="2"
                                            fluent:FluentAssist.CornerRadius="{TemplateBinding fluent:FluentAssist.CornerRadius,
                                                                                               Converter={converters:CornerRadiusToOrientedCornerRadiusConverter},
                                                                                               ConverterParameter=tright}"
                                            Command="{Binding CloseCommand,
                                                              RelativeSource={RelativeSource AncestorType={x:Type controls:STWindow}}}"
                                            Style="{DynamicResource WindowCloseButtonStyle}">
                                        <Path Width="10"
                                              Height="10"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Stretch="Uniform"
                                              Stroke="{Binding Foreground,
                                                               RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                              AncestorType=Button}}"
                                              StrokeThickness="1">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="3.76, 12.24" EndPoint="12.24, 3.76" />
                                                    <LineGeometry StartPoint="3.76, 3.76" EndPoint="12.24, 12.24" />
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Button>
                                </Grid>
                            </Border>

                            <!--  Content  -->
                            <Grid Grid.Row="1" Margin="10,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0"
                                       Height="32"
                                       MaxWidth="32"
                                       Margin="0,10,10,10"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Source="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                        Path=Parameters.Icon,
                                                        Converter={converters:DialogIconToImageSourceConverter}}"
                                       Stretch="Uniform" />

                                <ContentPresenter Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ClipToBounds="True"
                                                  Content="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                    Path=Parameters.Content}" />
                            </Grid>
                            <Separator Grid.Row="2" Margin="10,0" />
                            <Border Grid.Row="3" Margin="5">
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <Button Width="80"
                                            Command="dialog:MessageDialogCommands.YesResultCommand"
                                            Content="{DynamicResource MessageDialog.Yes}"
                                            IsDefault="True">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{converters:AnyBooleanToVisibilityConverter}">
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.YesNo}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.YesNoCancel}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <Button Width="80"
                                            Command="dialog:MessageDialogCommands.NoResultCommand"
                                            Content="{DynamicResource MessageDialog.No}"
                                            IsCancel="True">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{converters:AnyBooleanToVisibilityConverter}">
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.YesNoCancel}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.YesNo}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <Button Width="80"
                                            Command="dialog:MessageDialogCommands.CancelResultCommand"
                                            Content="{DynamicResource MessageDialog.Cancel}"
                                            IsCancel="True">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{converters:AnyBooleanToVisibilityConverter}">
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.YesNoCancel}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.OKCancel}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <Button Width="80"
                                            Command="dialog:MessageDialogCommands.OkResultCommand"
                                            Content="OK"
                                            IsDefault="True">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{converters:AnyBooleanToVisibilityConverter}">
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.OK}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{converters:EnumToBooleanConverter}"
                                                         ConverterParameter="{x:Static dialog:DialogButton.OKCancel}"
                                                         Path="Parameters.Button"
                                                         RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="fluent:FluentAssist.CornerRadius" Value="{themes:FluentResource CornerRadius}" />
    </Style>

</ResourceDictionary>